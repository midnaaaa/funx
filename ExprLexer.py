# Generated from Expr.g by ANTLR 4.7.2
from antlr4 import *
from io import StringIO
from typing.io import TextIO
import sys


def serializedATN():
    with StringIO() as buf:
        buf.write("\3\u608b\ua72a\u8133\ub9ed\u417c\u3be7\u7786\u5964\2\33")
        buf.write("\u008f\b\1\4\2\t\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7")
        buf.write("\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4\13\t\13\4\f\t\f\4\r\t\r")
        buf.write("\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22\t\22\4\23")
        buf.write("\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30")
        buf.write("\4\31\t\31\4\32\t\32\3\2\3\2\3\2\3\3\3\3\3\3\3\4\3\4\3")
        buf.write("\4\3\4\3\4\3\5\3\5\3\5\3\5\3\5\3\5\3\6\3\6\3\7\3\7\3\7")
        buf.write("\3\b\3\b\3\t\3\t\3\n\3\n\3\n\3\13\3\13\3\13\3\f\3\f\3")
        buf.write("\r\3\r\3\16\3\16\3\17\3\17\3\20\3\20\3\21\3\21\3\22\3")
        buf.write("\22\3\23\3\23\3\24\3\24\3\25\3\25\3\26\3\26\7\26l\n\26")
        buf.write("\f\26\16\26o\13\26\3\27\3\27\7\27s\n\27\f\27\16\27v\13")
        buf.write("\27\3\30\6\30y\n\30\r\30\16\30z\3\31\3\31\7\31\177\n\31")
        buf.write("\f\31\16\31\u0082\13\31\3\31\5\31\u0085\n\31\3\31\3\31")
        buf.write("\3\32\6\32\u008a\n\32\r\32\16\32\u008b\3\32\3\32\2\2\33")
        buf.write("\3\3\5\4\7\5\t\6\13\7\r\b\17\t\21\n\23\13\25\f\27\r\31")
        buf.write("\16\33\17\35\20\37\21!\22#\23%\24\'\25)\26+\27-\30/\31")
        buf.write("\61\32\63\33\3\2\b\3\2C\\\5\2\62;C\\c|\3\2c|\3\2\62;\3")
        buf.write("\2\f\f\4\2\f\f\"\"\2\u0094\2\3\3\2\2\2\2\5\3\2\2\2\2\7")
        buf.write("\3\2\2\2\2\t\3\2\2\2\2\13\3\2\2\2\2\r\3\2\2\2\2\17\3\2")
        buf.write("\2\2\2\21\3\2\2\2\2\23\3\2\2\2\2\25\3\2\2\2\2\27\3\2\2")
        buf.write("\2\2\31\3\2\2\2\2\33\3\2\2\2\2\35\3\2\2\2\2\37\3\2\2\2")
        buf.write("\2!\3\2\2\2\2#\3\2\2\2\2%\3\2\2\2\2\'\3\2\2\2\2)\3\2\2")
        buf.write("\2\2+\3\2\2\2\2-\3\2\2\2\2/\3\2\2\2\2\61\3\2\2\2\2\63")
        buf.write("\3\2\2\2\3\65\3\2\2\2\58\3\2\2\2\7;\3\2\2\2\t@\3\2\2\2")
        buf.write("\13F\3\2\2\2\rH\3\2\2\2\17K\3\2\2\2\21M\3\2\2\2\23O\3")
        buf.write("\2\2\2\25R\3\2\2\2\27U\3\2\2\2\31W\3\2\2\2\33Y\3\2\2\2")
        buf.write("\35[\3\2\2\2\37]\3\2\2\2!_\3\2\2\2#a\3\2\2\2%c\3\2\2\2")
        buf.write("\'e\3\2\2\2)g\3\2\2\2+i\3\2\2\2-p\3\2\2\2/x\3\2\2\2\61")
        buf.write("|\3\2\2\2\63\u0089\3\2\2\2\65\66\7>\2\2\66\67\7/\2\2\67")
        buf.write("\4\3\2\2\289\7k\2\29:\7h\2\2:\6\3\2\2\2;<\7g\2\2<=\7n")
        buf.write("\2\2=>\7u\2\2>?\7g\2\2?\b\3\2\2\2@A\7y\2\2AB\7j\2\2BC")
        buf.write("\7k\2\2CD\7n\2\2DE\7g\2\2E\n\3\2\2\2FG\7?\2\2G\f\3\2\2")
        buf.write("\2HI\7#\2\2IJ\7?\2\2J\16\3\2\2\2KL\7>\2\2L\20\3\2\2\2")
        buf.write("MN\7@\2\2N\22\3\2\2\2OP\7>\2\2PQ\7?\2\2Q\24\3\2\2\2RS")
        buf.write("\7@\2\2ST\7?\2\2T\26\3\2\2\2UV\7*\2\2V\30\3\2\2\2WX\7")
        buf.write("+\2\2X\32\3\2\2\2YZ\7`\2\2Z\34\3\2\2\2[\\\7,\2\2\\\36")
        buf.write("\3\2\2\2]^\7\61\2\2^ \3\2\2\2_`\7\'\2\2`\"\3\2\2\2ab\7")
        buf.write("-\2\2b$\3\2\2\2cd\7/\2\2d&\3\2\2\2ef\7}\2\2f(\3\2\2\2")
        buf.write("gh\7\177\2\2h*\3\2\2\2im\t\2\2\2jl\t\3\2\2kj\3\2\2\2l")
        buf.write("o\3\2\2\2mk\3\2\2\2mn\3\2\2\2n,\3\2\2\2om\3\2\2\2pt\t")
        buf.write("\4\2\2qs\t\3\2\2rq\3\2\2\2sv\3\2\2\2tr\3\2\2\2tu\3\2\2")
        buf.write("\2u.\3\2\2\2vt\3\2\2\2wy\t\5\2\2xw\3\2\2\2yz\3\2\2\2z")
        buf.write("x\3\2\2\2z{\3\2\2\2{\60\3\2\2\2|\u0080\7%\2\2}\177\n\6")
        buf.write("\2\2~}\3\2\2\2\177\u0082\3\2\2\2\u0080~\3\2\2\2\u0080")
        buf.write("\u0081\3\2\2\2\u0081\u0084\3\2\2\2\u0082\u0080\3\2\2\2")
        buf.write("\u0083\u0085\t\6\2\2\u0084\u0083\3\2\2\2\u0084\u0085\3")
        buf.write("\2\2\2\u0085\u0086\3\2\2\2\u0086\u0087\b\31\2\2\u0087")
        buf.write("\62\3\2\2\2\u0088\u008a\t\7\2\2\u0089\u0088\3\2\2\2\u008a")
        buf.write("\u008b\3\2\2\2\u008b\u0089\3\2\2\2\u008b\u008c\3\2\2\2")
        buf.write("\u008c\u008d\3\2\2\2\u008d\u008e\b\32\2\2\u008e\64\3\2")
        buf.write("\2\2\t\2mtz\u0080\u0084\u008b\3\b\2\2")
        return buf.getvalue()


class ExprLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    T__0 = 1
    T__1 = 2
    T__2 = 3
    T__3 = 4
    T__4 = 5
    T__5 = 6
    T__6 = 7
    T__7 = 8
    T__8 = 9
    T__9 = 10
    T__10 = 11
    T__11 = 12
    T__12 = 13
    T__13 = 14
    T__14 = 15
    T__15 = 16
    T__16 = 17
    T__17 = 18
    T__18 = 19
    T__19 = 20
    FUN = 21
    ID = 22
    NUM = 23
    COM = 24
    WS = 25

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'<-'", "'if'", "'else'", "'while'", "'='", "'!='", "'<'", "'>'", 
            "'<='", "'>='", "'('", "')'", "'^'", "'*'", "'/'", "'%'", "'+'", 
            "'-'", "'{'", "'}'" ]

    symbolicNames = [ "<INVALID>",
            "FUN", "ID", "NUM", "COM", "WS" ]

    ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", 
                  "T__7", "T__8", "T__9", "T__10", "T__11", "T__12", "T__13", 
                  "T__14", "T__15", "T__16", "T__17", "T__18", "T__19", 
                  "FUN", "ID", "NUM", "COM", "WS" ]

    grammarFileName = "Expr.g"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.7.2")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


